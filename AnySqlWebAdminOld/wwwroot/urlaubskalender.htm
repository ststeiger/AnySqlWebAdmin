<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta charset="utf-8" />

    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />

    <title>Index</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.00, minimum-scale=1.00, maximum-scale=1.00" />

    <style type="text/css">
        html, body {
            margin: 0px;
            padding: 0px;
            width: 100%;
            height: 100%;
        }



        .verticalText {
            display: flex;
            justify-content: center;
            align-items: center;
            #display: inline-block;
            width: 1em;
            padding-left: 1mm;
            padding-right: 1mm;
            text-align: center;
            vertical-align: middle;
            color: black;
            font-weight: bold;
            font-size: 20px;
            writing-mode: vertical-lr;
            #writing-mode: vertical-rl;
            -ms-writing-mode: tb-rl;
            transform-origin: center;
            transform: rotate(180deg);
            padding-top: 2mm;
            padding-bottom: 3mm;
        }
		
       table {
            border-collapse: collapse;
        }
    </style>

    <!--
    <script src="ts/Vanillatree/vanillatree.js?v=7"></script>
    <link rel="stylesheet" href="ts/Vanillatree/vanillatree.css?v=1">
    -->
</head>
<body>


<!--
https://stackoverflow.com/questions/2013902/select-cells-on-a-table-by-dragging

Berechnung von Ostern:
https://stackoverflow.com/a/36279634/155077

Siehe
https://www.youtube.com/watch?v=WgHmqv_-UbQ
https://www.youtube.com/watch?v=9n04SEzuvXo
https://www.youtube.com/watch?v=82p-DYgGFjI

Auch interessant in diesem Zusammenhang:
https://www.youtube.com/watch?v=jJSpujHhaGQ
https://www.youtube.com/watch?v=YAnxt1YPWbk

https://www.countryliving.com/life/inspirational-stories/a26430267/how-is-easter-date-determined/
https://de.wikipedia.org/wiki/Fr%C3%BChlingspunkt
https://de.wikipedia.org/wiki/%C3%84quinoktium

-->

    <script>

        if (!String.prototype.padStart)
        {
            String.prototype.padStart = function padStart(targetLength, padString)
            {
                targetLength = targetLength >> 0; //truncate if number, or convert non-number to 0;
                padString = String(padString !== undefined ? padString : ' ');
                if (this.length >= targetLength)
                {
                    return String(this);
                } else
                {
                    targetLength = targetLength - this.length;
                    if (targetLength > padString.length)
                    {
                        padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed
                    }
                    return padString.slice(0, targetLength) + String(this);
                }
            };
        }




        function daysInMonth(month, year)
        {
            return new Date(year, month, 0).getDate();
        }



        /// <summary>
        /// Get Orthodox easter for requested year
        /// </summary>
        /// <param name="year">Year of easter</param>
        /// <returns>DateTime of Orthodox Easter</returns>
        function GetOrthodoxEasterSunday(year)
        {
            let a = year % 19;
            let b = year % 7;
            let c = year % 4;

            let d = (19 * a + 16) % 30;
            let e = (2 * c + 4 * b + 6 * d) % 7;
            let f = (19 * a + 16) % 30;
            let key = f + e + 3;

            let month = (key > 30) ? 5 : 4;
            let day = (key > 30) ? key - 30 : key;

            return new Date(year, month - 1, day);
        }


        /// <summary>
        /// Get Catholic easter for requested year
        /// </summary>
        /// <param name="year">Year of easter</param>
        /// <returns>DateTime of Catholic Easter</returns>
        function GetCatholicEasterSunday(year)
        {
            let month = 3;
            let G = year % 19 + 1;
            let C = year / 100 + 1;
            let X = (3 * C) / 4 - 12;
            let Y = (8 * C + 5) / 25 - 5;
            let Z = (5 * year) / 4 - X - 10;
            let E = (11 * G + 20 + Y - X) % 30;
            if (E == 24) { E++; }
            if ((E == 25) && (G > 11)) { E++; }
            let N = 44 - E;
            if (N < 21) { N = N + 30; }
            let P = (N + 7) - ((Z + N) % 7);
            if (P > 31)
            {
                P = P - 31;
                month = 4;
            }

            return new Date(year, month - 1, P);
        }

        // https://stackoverflow.com/questions/2510383/how-can-i-calculate-what-date-good-friday-falls-on-given-a-year/36279634#36279634


        function addDays(origDate, days)
        {
            let date = new Date(origDate.valueOf());
            date.setDate(date.getDate() + days);
            return date;
        }


        function getDateInfo(day)
        {
            let dateInfo = {};


            let dayNames = {
                DE: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"],
                EN: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                FR: ["Dimanche", "Lundi", "Mardi", "Mercredi", "Jeudi", "Vendredi", "Samedi"],
                IT: ["Domenica", "Lunedì", "Martedì", "Mercoledì", "Giovedì", "Venerdì", "Sabato"],
                RU: ["Dumengia", "Glindesdi", "Mardi", "Mesemna", "Gievgia", "Venderdi", "Sonda"]
            };



            let year = day.getFullYear();
            let dayOfWeek = day.getDay();
            let isWeekend = (dayOfWeek === 0 || dayOfWeek === 6) ? true : false;


            let easterSunday = GetCatholicEasterSunday(year);



            // TODO: Compute special days
            let feiertage = [
                { name: "Neujahr", value: new Date(year, 0, 1) }
                , { name: "Berchtoldstag", value: new Date(year, 0, 2) }
                , { name: "Karfreitag", value: addDays(easterSunday, -2) }
                // , { name: "Ostern", value: easterSunday }
                , { name: "Ostermontag", value: addDays(easterSunday, 1) }
                , { name: "1. Mai", value: new Date(year, 4, 1) }
                , { name: "Auffahrt", value: addDays(easterSunday, 39) }
                // , { name: "Pfingsten", value: addDays(easterSunday, 49) }
                , { name: "Pfingstmontag", value: addDays(easterSunday, 50) }
                , { name: "1. August", value: new Date(year, 7, 1) }
                , { name: "Weihnachten", value: new Date(year, 11, 25) }
                , { name: "Stephanstag", value: new Date(year, 11, 26) }
            ];

            for (let i = 0; i < feiertage.length; ++i)
            {
                if (feiertage[i].value.getTime() == day.getTime())
                {
                    dateInfo = feiertage[i];

                    if (isWeekend)
                    {
                        dateInfo.color = "crimson";
                    }
                    else
                        dateInfo.color = "#E7884B";

                    break;
                }

            }


            if (isWeekend)
            {
                dateInfo.color = dateInfo.color || "#117485";
            }

            const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
            dateInfo.title = day.toLocaleDateString('de-CH', options);
            dateInfo.weekDayName = dayNames.DE[dayOfWeek];
            dateInfo.paddedDay = day.getDate().toString().padStart(2, '0');
            dateInfo.originalDate = day;

            return dateInfo;
        }



        function tableCreate()
        {
            let year = 2021;

            var employees = ["Hanspeter Hafner"
                , "Nando Hämmerli"
                , "Thomas Hartmann"
                , "Rico Luder"
                , "Jürg Müller"
                , "Marco Siegenthaler"
                , "Patrick Sprenger"
                , "Stefan Steiger"
                , "Fabio Visconti"
            ];


            let monthNames = {
                DE: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
                EN: ["January", "February", "March", "April", "May", "June", "Juli", "August", "September", "October", "November", "December"],
                FR: ["Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"],
                IT: ["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre"],
                RU: ["Schaner", "Favrer", "Mars", "Avrigl", "Matg", "Zercladur", "Fanadur", "Avust", "Settember", "October", "November", "December"]
            };

            let weekName = {
                DE: "Woche",
                EN: "Week",
                FR: "Semaine",
                IT: "Settimana",
                RU: "Emna"
            };

            let monthName = {
                DE: "Monat",
                EN: "Month",
                FR: "Mois",
                IT: "Mese",
                RU: "Mais"
            };



            //body reference
            var body = document.getElementsByTagName("body")[0];


            for (let month = 0; month < 12; ++month)
            {
                let maxDays = daysInMonth(month + 1, year);
                console.log(year, monthNames.DE[month], maxDays);

                // create elements <table> and a <tbody>
                var tbl = document.createElement("table");
                tbl.setAttribute("style", "border: 1px solid black; ");

                var tblHead = document.createElement("thead");
                var headRow = document.createElement("tr");




                var emptyCell = document.createElement("th");
                emptyCell.setAttribute("style", "background-color: #F2F2F2;");
                headRow.appendChild(emptyCell);


                for (let day = 0; day <= maxDays; ++day)
                {
                    var headColumn = document.createElement("th");

                    headColumn.setAttribute("style", "text-align: left;");

                    if (day === 0)
                    {
                        headColumn.appendChild(document.createTextNode("Mitarbeiter"));
                        headColumn.setAttribute("style", headColumn.getAttribute("style") + "background-color: #F2F2F2;");
                    }
                    else
                    {
                        let d = new Date(year, month, day);
                        let di = getDateInfo(d);

                        // headColumn.appendChild(document.createTextNode(d.toLocaleDateString()));

                        headColumn.setAttribute("title", di.title);
                        headColumn.appendChild(document.createTextNode(di.paddedDay));
                        headColumn.setAttribute("style", "background-color: #F2F2F2; text-align: middle;");
                    }

                    headRow.appendChild(headColumn);
                }



                tblHead.appendChild(headRow);
                tbl.appendChild(tblHead);


                var tblBody = document.createElement("tbody");

                for (let emp = 0; emp < employees.length; ++emp)
                {
                    // table row creation
                    var row = document.createElement("tr");

                    // cells creation
                    for (let day = 0; day <= maxDays; ++day)
                    {
                        // create element <td> and text node
                        //Make text node the contents of <td> element
                        // put <td> at end of the table row
                        var cell = document.createElement("td");

                        if (day === 0)
                            cell.appendChild(document.createTextNode(employees[emp]));
                        else
                        {
                            // cell.appendChild(document.createTextNode((day).toString().padStart(2, '0')));
                            cell.setAttribute("style", "border: 1px solid black;");



                            let d = new Date(year, month, day);
                            let di = getDateInfo(d)
                            cell.setAttribute("title", di.name || di.title);
                            if (di.color)
                                cell.setAttribute("style", cell.getAttribute("style") + " background-color: " + di.color + ";");
                        }

                        row.appendChild(cell);
                    } // Next day

                    //row added to end of table body
                    tblBody.appendChild(row);
                } // Next emp

                // <td rowspan="8">Jan</td>
                let tdMonth = document.createElement("td");
                tdMonth.setAttribute("rowspan", employees.length);
                tdMonth.setAttribute("style", "background-color: #F2F2F2;");

                // <span class="verticalText">Januar</span>
                let monthSpan = document.createElement("span");
                monthSpan.setAttribute("class", "verticalText");
                monthSpan.appendChild(document.createTextNode(monthNames.DE[month]));
                tdMonth.appendChild(monthSpan);

                tblBody.firstElementChild.appendChild(tdMonth);

                tblBody.firstElementChild.insertBefore(tdMonth, tblBody.firstElementChild.firstElementChild);


                // append the <tbody> inside the <table>
                tbl.appendChild(tblBody);


                var tblFoot = document.createElement("tfoot");
                var footRow = document.createElement("tr");

                for (var j = 0; j <= 2; j++)
                {
                    var footColumn = document.createElement("td");
                    footColumn.setAttribute("style", "text-align: left;");
                    footColumn.appendChild(document.createTextNode("hi"));

                    tblFoot.appendChild(footColumn);
                }

                tblFoot.appendChild(footRow);
                // tbl.appendChild(tblFoot);


                // put <table> in the <body>
                body.appendChild(tbl);




                body.appendChild(document.createElement("br"));
                body.appendChild(document.createElement("br"));

                //break;
            } // Next month

        } // End Function tableCreate

        tableCreate();

    </script>

</body>
</html>
